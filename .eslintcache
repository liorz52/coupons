[{"C:\\Development\\react\\coupons\\src\\index.tsx":"1","C:\\Development\\react\\coupons\\src\\reportWebVitals.ts":"2","C:\\Development\\react\\coupons\\src\\components\\layout\\Layout.tsx":"3","C:\\Development\\react\\coupons\\src\\components\\login\\Login.tsx":"4","C:\\Development\\react\\coupons\\src\\components\\header\\Header.tsx":"5","C:\\Development\\react\\coupons\\src\\components\\menu\\Menu.tsx":"6","C:\\Development\\react\\coupons\\src\\components\\footer\\Footer.tsx":"7","C:\\Development\\react\\coupons\\src\\models\\UserLoginDetails.ts":"8","C:\\Development\\react\\coupons\\src\\models\\Coupon.ts":"9","C:\\Development\\react\\coupons\\src\\components\\company\\Company.tsx":"10","C:\\Development\\react\\coupons\\src\\components\\admin\\Admin.tsx":"11","C:\\Development\\react\\coupons\\src\\components\\customer\\Customer.tsx":"12","C:\\Development\\react\\coupons\\src\\components\\card\\Card.tsx":"13","C:\\Development\\react\\coupons\\src\\components\\couponDetails\\CouponDetails.tsx":"14","C:\\Development\\react\\coupons\\src\\components\\register\\Register.tsx":"15","C:\\Development\\react\\coupons\\src\\models\\User.ts":"16","C:\\Development\\react\\coupons\\src\\models\\UserType.ts":"17","C:\\Development\\react\\coupons\\src\\models\\Purchase.ts":"18","C:\\Development\\react\\coupons\\src\\redux\\action-type.ts":"19","C:\\Development\\react\\coupons\\src\\redux\\store.ts":"20","C:\\Development\\react\\coupons\\src\\redux\\reducer.ts":"21","C:\\Development\\react\\coupons\\src\\redux\\app-state.ts":"22","C:\\Development\\react\\coupons\\src\\components\\addCoupon\\AddCoupon.tsx":"23","C:\\Development\\react\\coupons\\src\\models\\CategoryType.ts":"24","C:\\Development\\react\\coupons\\src\\components\\addCompany\\addCompany.tsx":"25","C:\\Development\\react\\coupons\\src\\components\\companies\\Companies.tsx":"26","C:\\Development\\react\\coupons\\src\\components\\companyDetails\\CompanyDetails.tsx":"27","C:\\Development\\react\\coupons\\src\\models\\Company.ts":"28","C:\\Development\\react\\coupons\\src\\components\\purchaseDetails\\PurchaseDetails.tsx":"29","C:\\Development\\react\\coupons\\src\\components\\users\\User.tsx":"30","C:\\Development\\react\\coupons\\src\\components\\userDetails\\UserDetails.tsx":"31","C:\\Development\\react\\coupons\\src\\components\\updateCompany\\UpdateCompany.tsx":"32","C:\\Development\\react\\coupons\\src\\components\\updateUser\\UpdateUser.tsx":"33","C:\\Development\\react\\coupons\\src\\components\\updateCoupon\\UpdateCoupon.tsx":"34","C:\\Development\\react\\coupons\\src\\components\\purchases\\Purchases.tsx":"35"},{"size":528,"mtime":1611222040438,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":3629,"mtime":1616409306456,"results":"39","hashOfConfig":"37"},{"size":3140,"mtime":1616411384679,"results":"40","hashOfConfig":"37"},{"size":207,"mtime":1616411379877,"results":"41","hashOfConfig":"37"},{"size":2240,"mtime":1616433478951,"results":"42","hashOfConfig":"37"},{"size":232,"mtime":1616411372655,"results":"43","hashOfConfig":"37"},{"size":137,"mtime":1612864485261,"results":"44","hashOfConfig":"37"},{"size":515,"mtime":1616144997701,"results":"45","hashOfConfig":"37"},{"size":3778,"mtime":1616411288785,"results":"46","hashOfConfig":"37"},{"size":3533,"mtime":1616411240281,"results":"47","hashOfConfig":"37"},{"size":3536,"mtime":1616411365791,"results":"48","hashOfConfig":"37"},{"size":865,"mtime":1616411262944,"results":"49","hashOfConfig":"37"},{"size":4140,"mtime":1616411357975,"results":"50","hashOfConfig":"37"},{"size":3122,"mtime":1616411462780,"results":"51","hashOfConfig":"37"},{"size":383,"mtime":1614196201052,"results":"52","hashOfConfig":"37"},{"size":94,"mtime":1614707138905,"results":"53","hashOfConfig":"37"},{"size":272,"mtime":1616087828884,"results":"54","hashOfConfig":"37"},{"size":56,"mtime":1615841675555,"results":"55","hashOfConfig":"37"},{"size":175,"mtime":1614525760080,"results":"56","hashOfConfig":"37"},{"size":1103,"mtime":1615841951113,"results":"57","hashOfConfig":"37"},{"size":278,"mtime":1615841310916,"results":"58","hashOfConfig":"37"},{"size":4534,"mtime":1616411227959,"results":"59","hashOfConfig":"37"},{"size":80,"mtime":1615735456390,"results":"60","hashOfConfig":"37"},{"size":2575,"mtime":1616157064334,"results":"61","hashOfConfig":"37"},{"size":2903,"mtime":1616411279202,"results":"62","hashOfConfig":"37"},{"size":1939,"mtime":1616411297745,"results":"63","hashOfConfig":"37"},{"size":205,"mtime":1614864005479,"results":"64","hashOfConfig":"37"},{"size":2594,"mtime":1616411439161,"results":"65","hashOfConfig":"37"},{"size":3125,"mtime":1616411183982,"results":"66","hashOfConfig":"37"},{"size":2305,"mtime":1616432744601,"results":"67","hashOfConfig":"37"},{"size":2308,"mtime":1616411472273,"results":"68","hashOfConfig":"37"},{"size":3014,"mtime":1616411521485,"results":"69","hashOfConfig":"37"},{"size":3180,"mtime":1616411499369,"results":"70","hashOfConfig":"37"},{"size":2953,"mtime":1616411450368,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"18gw83n",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"74"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"74"},"C:\\Development\\react\\coupons\\src\\index.tsx",[],["160","161"],"C:\\Development\\react\\coupons\\src\\reportWebVitals.ts",[],"C:\\Development\\react\\coupons\\src\\components\\layout\\Layout.tsx",["162"],"import axios from 'axios';\nimport React, { Component } from 'react'\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { ActionType } from '../../redux/action-type';\nimport { store } from '../../redux/store';\n\nimport addCompany from '../addCompany/addCompany';\nimport addCoupon from '../addCoupon/AddCoupon';\nimport Admin from '../admin/Admin';\nimport Companies from '../companies/Companies';\nimport Company from '../company/Company';\nimport CompanyDetails from '../companyDetails/CompanyDetails';\nimport CouponDetails from '../couponDetails/CouponDetails';\nimport Customer from '../customer/Customer';\nimport Footer from '../footer/Footer';\nimport Header from '../header/Header';\nimport Login from '../login/Login';\nimport Menu from '../menu/Menu';\nimport Purchases from '../purchases/Purchases';\nimport PurchaseDetails from '../purchaseDetails/PurchaseDetails';\nimport Register from '../register/Register';\nimport UpdateCompany from '../updateCompany/UpdateCompany';\nimport UpdateCoupon from '../updateCoupon/UpdateCoupon';\nimport UpdateUser from '../updateUser/UpdateUser';\nimport UserDetails from '../userDetails/UserDetails';\nimport Users from '../users/User';\nimport \"./Layout.css\";\n\ninterface ILayoutState{\n  tokenUsed: boolean;\n}\n\nexport default class Layout extends Component<any,ILayoutState> {\n  public constructor(props: any){\n    super(props);\n    this.state={\n      tokenUsed: false\n    };\n  }\n  public componentDidMount =() =>{\n    axios.defaults.headers.common[\"Authorization\"]= sessionStorage.getItem(\"token\");\n    if (sessionStorage.getItem(\"isLoggedIn\")===\"1\"){\n      store.dispatch({type:ActionType.LOGIN, payload: sessionStorage.getItem(\"userType\")});\n    }\n    this.setState({tokenUsed: true});\n  }\n  public render() {\n    return (\n      <BrowserRouter>\n        <div className=\"layout\">\n          <header>  <Header /> </header> \n          <aside>   <Menu /> </aside>\n          <main>\n            <Switch>\n         \n              <Route path=\"/home\" component={Login} exact  />\n          {this.state.tokenUsed==true && \n          <aside className=\"layout\">\n              <Route path=\"/customer\" component={Customer} exact />\n              <Route path=\"/company\" component={Company} exact />\n              <Route path=\"/admin\" component={Admin} exact />\n              <Route path=\"/addCoupon\" component={addCoupon} exact />\n              <Route path=\"/addCompany\" component={addCompany} exact />\n              <Route path=\"/companies\" component={Companies} exact />\n              <Route path=\"/users\" component={Users} exact />\n              <Route path=\"/purchases\" component={Purchases} exact />\n              <Route path=\"/companyDetails/:id\" component={CompanyDetails} exact />\n              <Route path=\"/userDetails/:id\" component={UserDetails} exact />\n              <Route path=\"/updateUser/:id\" component={UpdateUser} exact />\n              <Route path=\"/updateCompany/:id\" component={UpdateCompany} exact />\n              <Route path=\"/updateCoupon/:id\" component={UpdateCoupon} exact />\n              <Route path=\"/couponDetails/:id\" component={CouponDetails} exact />\n              <Route path=\"/purchaseDetails/:id\" component={PurchaseDetails} exact />\n              <Route path=\"/register\" component={Register} exact />\n              {/* <Route path=\"/purchase\" component={Purchase} exact /> */}\n              {/* <Route component={PageNotFound} /> */}\n              </aside>}\n              <Redirect from=\"/\" to=\"/home\" exact />\n            </Switch>\n          </main>\n          <footer> <Footer /> </footer>\n        </div>\n      </BrowserRouter >\n    );\n\n  }\n}\n\n","C:\\Development\\react\\coupons\\src\\components\\login\\Login.tsx",[],"C:\\Development\\react\\coupons\\src\\components\\header\\Header.tsx",[],"C:\\Development\\react\\coupons\\src\\components\\menu\\Menu.tsx",["163","164","165","166","167","168","169","170"],"import axios from 'axios';\nimport React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport { Unsubscribe } from 'redux';\nimport { UserType } from '../../models/UserType';\nimport { ActionType } from '../../redux/action-type';\nimport { store } from '../../redux/store';\nimport \"./Menu.css\";\n\ninterface IMenuState {\n  isLoggedIn: boolean;\n  userType: UserType;\n}\n\n\nexport default class Menu extends Component<any, IMenuState> {\n\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      userType: null\n    };\n  }\n\n  componentDidMount() {\n    store.subscribe(() => this.setState({\n      isLoggedIn: store.getState().isLoggedIn,\n      userType: store.getState().userType\n    })\n    );\n  }\n\n  private logOut = async () => {\n    try {\n      await axios.post(\"http://localhost:8080/users/logOut\");\n      store.dispatch({ type: ActionType.LOGOUT })\n    } catch (error) {\n      alert(error.response.data.errorMessage);\n      console.log(error);\n    };\n  }\n\n  public render() {\n    let id = sessionStorage.getItem(\"userId\");\n    return (\n      <div className=\"menu\">\n        <NavLink to=\"/home\" exact>Home</NavLink>\n\n\n        {(store.getState().isLoggedIn == true && store.getState().userType == \"ADMIN\") &&\n          <span className=\"menu\">\n            <NavLink to=\"/users\" exact> Users</NavLink>\n            <NavLink to=\"/companies\" exact>Companies</NavLink>\n\n            <NavLink to=\"/admin\" exact>Coupons</NavLink>\n          </span>}\n        {(store.getState().isLoggedIn == true && store.getState().userType == \"COMPANY\") &&\n          <NavLink to=\"/company\" exact>Coupons</NavLink>}\n        {(store.getState().isLoggedIn == true && store.getState().userType == \"CUSTOMER\") &&\n          <NavLink to=\"/customer\" exact>Coupons</NavLink>}\n        {store.getState().isLoggedIn == true &&\n          <span className=\"menu\" >\n            <NavLink to=\"/purchases\" exact>Purchases</NavLink>\n            <NavLink to={\"/userDetails/\" + id} exact>Account</NavLink>\n            <span className=\"menu\">\n            <NavLink to=\"/home\" exact >\n              <input type=\"button\" value=\"Log out\" onClick={this.logOut} />\n            </NavLink></span>\n          </span>}\n\n      </div>\n    );\n  }\n}","C:\\Development\\react\\coupons\\src\\components\\footer\\Footer.tsx",[],"C:\\Development\\react\\coupons\\src\\models\\UserLoginDetails.ts",[],"C:\\Development\\react\\coupons\\src\\models\\Coupon.ts",[],"C:\\Development\\react\\coupons\\src\\components\\company\\Company.tsx",["171","172","173"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { ChangeEvent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Coupon } from \"../../models/Coupon\";\r\nimport Card from \"../card/Card\";\r\nimport \"./Company.css\";\r\n\r\ninterface CompanyState {\r\n    coupons: Coupon[];\r\n    couponNameFilter: string;\r\n    categoryFilter: string;\r\n    maxPriceFilter: number;\r\n\r\n}\r\nexport default class Company extends Component<any, CompanyState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = { coupons: [], couponNameFilter: \"\", categoryFilter: \"\", maxPriceFilter: 0 };\r\n    }\r\n    public onCategorySelected = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        let text = event.target.value;\r\n        this.setState({ categoryFilter: text });\r\n    }\r\n\r\n    public onMaxPrice = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let price = + event.target.value;\r\n        this.setState({ maxPriceFilter: price });\r\n    }\r\n    public onCouponsPipeChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let text = event.target.value;\r\n        this.setState({ couponNameFilter: text });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const token = sessionStorage.getItem(\"token\");\r\n            axios.defaults.headers.common[\"Authorization\"] = token;\r\n            const response = await axios.get<Coupon[]>(\"http://localhost:8080/coupons/byCompanyIdForCompany\");\r\n            this.setState({ coupons: response.data });\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error.response.data.errorMessage);\r\n        }\r\n\r\n    }\r\n    public render() {\r\n        return (\r\n            <div className=\"company\">\r\n                <br />   <br />\r\n                <NavLink to={\"/addCoupon\"} className=\"add\">\r\n                    <input type=\"button\" value=\"add coupon\" />\r\n                </NavLink>\r\n                <br />   <br /><br />\r\n                <span className=\"search\">  Search by name: </span><input type=\"text\" onChange={this.onCouponsPipeChanged} />\r\n\r\n                <span className=\"category\">category:</span> <select className=\"select\" onChange={this.onCategorySelected}>\r\n                    <option className=\"category\"> </option>\r\n                    <option className=\"category\"> FACE </option>\r\n                    <option className=\"category\"> BODY </option>\r\n                    <option className=\"category\"> EYES </option>\r\n                </select>\r\n                <span className=\"max-price\">Max price: </span><input className=\"max-price-input\" type=\"number\" onChange={this.onMaxPrice} />\r\n\r\n\r\n\r\n                <br /> <br />\r\n                {<div>\r\n                    {this.state.coupons.filter(coupon => {\r\n                        if (this.state.couponNameFilter == \"\") {\r\n                            return true;\r\n                        }\r\n                        return coupon.couponName.toLowerCase().includes(this.state.couponNameFilter.toLowerCase());\r\n                    })\r\n                        .filter(coupon => {\r\n                            if (this.state.categoryFilter == \"\") {\r\n                                return true;\r\n                            }\r\n                            return coupon.category.includes(this.state.categoryFilter);\r\n                        })\r\n\r\n                        .filter(coupon => {\r\n                            if (this.state.maxPriceFilter == 0) {\r\n                                return true;\r\n                            }\r\n                            return coupon.price <= (this.state.maxPriceFilter);\r\n                        })\r\n                        .map((coupon) => (<Card key={coupon.id} {...coupon} />))}\r\n\r\n\r\n                </div>}\r\n            </div >\r\n\r\n        )\r\n    }\r\n\r\n}","C:\\Development\\react\\coupons\\src\\components\\admin\\Admin.tsx",["174","175","176","177"],"import axios from \"axios\";\r\nimport React, { ChangeEvent, Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Coupon } from \"../../models/Coupon\";\r\nimport Card from \"../card/Card\";\r\nimport \"./Admin.css\";\r\n\r\ninterface AdminState {\r\n    coupons: Coupon[];\r\n    couponNameFilter: String;\r\n    categoryFilter: string;\r\n    maxPriceFilter: number;\r\n\r\n}\r\nexport default class Company extends Component<any, AdminState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = { coupons: [], couponNameFilter: \"\", categoryFilter: \"\", maxPriceFilter: 0 };\r\n    }\r\n    public onCategorySelected = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        let text = event.target.value;\r\n        this.setState({ categoryFilter: text });\r\n    }\r\n\r\n    public onMaxPrice = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let price = + event.target.value;\r\n        this.setState({ maxPriceFilter: price });\r\n    }\r\n    public onCouponsPipeChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let text = event.target.value;\r\n        this.setState({ couponNameFilter: text });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n\r\n            const token = sessionStorage.getItem(\"token\");\r\n            axios.defaults.headers.common[\"Authorization\"] = token;\r\n            const response = await axios.get<Coupon[]>(\"http://localhost:8080/coupons\");\r\n            this.setState({ coupons: response.data });\r\n\r\n\r\n\r\n        } catch (error) {\r\n            alert(error.response.data.errorMessage);\r\n        }\r\n\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"Admin\">\r\n\r\n                <br /> <br />\r\n                <span className=\"search\">  Search by name: </span><input type=\"text\" onChange={this.onCouponsPipeChanged} />\r\n\r\n                <span className=\"category\">category:</span> <select className=\"select\" onChange={this.onCategorySelected}>\r\n                    <option className=\"category\"> </option>\r\n                    <option className=\"category\"> FACE </option>\r\n                    <option className=\"category\"> BODY </option>\r\n                    <option className=\"category\"> EYES </option>\r\n                </select>\r\n                <span className=\"max-price\">Max price: </span><input className=\"max-price-input\" type=\"number\" onChange={this.onMaxPrice} />\r\n\r\n\r\n                <br /> <br />\r\n                {<div>\r\n                    {this.state.coupons.filter(coupon => {\r\n                        if (this.state.couponNameFilter == \"\") {\r\n                            return true;\r\n                        }\r\n                        return coupon.couponName.toLowerCase().includes(this.state.couponNameFilter.toLowerCase());\r\n                    })\r\n                        .filter(coupon => {\r\n                            if (this.state.categoryFilter == \"\") {\r\n                                return true;\r\n                            }\r\n                            return coupon.category.includes(this.state.categoryFilter);\r\n                        })\r\n\r\n                        .filter(coupon => {\r\n                            if (this.state.maxPriceFilter == 0) {\r\n                                return true;\r\n                            }\r\n                            return coupon.price <= (this.state.maxPriceFilter);\r\n                        })\r\n                        .map((coupon) => (<Card key={coupon.id} {...coupon} />))}\r\n\r\n\r\n                </div>}\r\n            </div >\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}","C:\\Development\\react\\coupons\\src\\components\\customer\\Customer.tsx",["178","179","180"],"import axios from \"axios\";\r\nimport { ChangeEvent } from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Coupon } from \"../../models/Coupon\";\r\nimport Card from \"../card/Card\";\r\nimport \"./Customer.css\";\r\n\r\n\r\n\r\ninterface CustomerState {\r\n    coupons: Coupon[];\r\n    couponNameFilter: string;\r\n    categoryFilter: string;\r\n    maxPriceFilter: number;\r\n\r\n}\r\nexport default class Customers extends Component<any, CustomerState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = { coupons: [], couponNameFilter: \"\", categoryFilter: \"\", maxPriceFilter: 0 };\r\n    }\r\n    public onCategorySelected = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        let text = event.target.value;\r\n        this.setState({ categoryFilter: text });\r\n    }\r\n\r\n    public onMaxPrice = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let price = + event.target.value;\r\n        this.setState({ maxPriceFilter: price });\r\n    }\r\n    public onCouponsPipeChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let text = event.target.value;\r\n        this.setState({ couponNameFilter: text });\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const token = sessionStorage.getItem(\"token\");\r\n            axios.defaults.headers.common[\"Authorization\"] = token;\r\n            const response = await axios.get<Coupon[]>(\"http://localhost:8080/coupons/allForCustomer\");\r\n            this.setState({ coupons: response.data });\r\n\r\n\r\n        } catch (error) {\r\n            alert(error.response.data.errorMessage);\r\n        }\r\n\r\n    }\r\n    public render() {\r\n        return (\r\n            <div className=\"Customer\">\r\n                <br /> <br />\r\n                <span className=\"search\">  Search by name: </span><input type=\"text\" onChange={this.onCouponsPipeChanged} />\r\n\r\n                <span className=\"category\">category:</span> <select className=\"select\" onChange={this.onCategorySelected}>\r\n                    <option className=\"category\"> </option>\r\n                    <option className=\"category\"> FACE </option>\r\n                    <option className=\"category\"> BODY </option>\r\n                    <option className=\"category\"> EYES </option>\r\n                </select>\r\n                <span className=\"max-price\">Max price:</span><input className=\"max-price-input\" type=\"number\" onChange={this.onMaxPrice} />\r\n\r\n\r\n\r\n                <br /> <br />\r\n                {<div>\r\n                    {this.state.coupons.filter(coupon => {\r\n                        if (this.state.couponNameFilter == \"\") {\r\n                            return true;\r\n                        }\r\n                        return coupon.couponName.toLowerCase().includes(this.state.couponNameFilter.toLowerCase());\r\n                    })\r\n                        .filter(coupon => {\r\n                            if (this.state.categoryFilter == \"\") {\r\n                                return true;\r\n                            }\r\n                            return coupon.category.includes(this.state.categoryFilter);\r\n                        })\r\n\r\n                        .filter(coupon => {\r\n                            if (this.state.maxPriceFilter == 0) {\r\n                                return true;\r\n                            }\r\n                            return coupon.price <= (this.state.maxPriceFilter);\r\n                        })\r\n                        .map((coupon) => (<Card key={coupon.id} {...coupon} />))}\r\n\r\n\r\n                </div>}\r\n            </div >\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n","C:\\Development\\react\\coupons\\src\\components\\card\\Card.tsx",[],"C:\\Development\\react\\coupons\\src\\components\\couponDetails\\CouponDetails.tsx",["181","182","183","184","185","186","187"],"import axios from 'axios';\r\nimport React from 'react';\r\nimport { ChangeEvent } from 'react';\r\nimport { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Coupon } from '../../models/Coupon';\r\nimport { Purchase } from '../../models/Purchase';\r\nimport { SuccessfulLoginServerResponse } from '../../models/SuccessfulLoginServerResponse';\r\nimport { User } from '../../models/User';\r\nimport { UserType } from '../../models/UserType';\r\nimport Card from '../card/Card';\r\nimport \"./CouponDetails.css\";\r\n\r\n\r\ninterface CouponsDetailsState {\r\n  coupon: Coupon;\r\n  isAdminOrCompany: boolean;\r\n}\r\nexport default class CouponDetails extends Component<any, CouponsDetailsState> {\r\n\r\n  private purchaseAmount: number;\r\n\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      coupon: new Coupon(null, \"\", \"\"), isAdminOrCompany: false\r\n\r\n    };\r\n\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    try {\r\n      const token = sessionStorage.getItem(\"token\");\r\n      axios.defaults.headers.common[\"Authorization\"] = token;\r\n      const id = this.props.match.params.id;\r\n      const response = await axios.get<Coupon>(\"http://localhost:8080/coupons/\" + id);\r\n      this.setState({ coupon: response.data });\r\n      const userType = sessionStorage.getItem(\"userType\");\r\n      if (userType == \"ADMIN\" || userType == \"COMPANY\") {\r\n        this.setState({ isAdminOrCompany: true });\r\n      }\r\n    } catch (err) {\r\n      alert(err.response.data.errorMessage);\r\n    }\r\n  }\r\n\r\n  private delete = async () => {\r\n\r\n    try {\r\n      const id = this.props.match.params.id;\r\n      const response = await axios.delete(\"http://localhost:8080/coupons/\" + id);\r\n      this.setState({ coupon: response.data });\r\n      alert(\"Coupon was successfuly deleted\");\r\n      this.props.history.push('/admin');\r\n\r\n\r\n    } catch (err) {\r\n      alert(err.response.data.errorMessage);\r\n    }\r\n  }\r\n  private onPurchaseAmountChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.purchaseAmount = +event.target.value;\r\n  }\r\n\r\n  private toDate(strDate: string): string {\r\n    let date = new Date(strDate);\r\n    return date.toDateString();\r\n  }\r\n\r\n  private purchase = async () => {\r\n\r\n    try {\r\n      const couponId = this.props.match.params.id;\r\n      let purchase = new Purchase(null, null, couponId, null, this.purchaseAmount, null)\r\n      const response = await axios.post<number>(\"http://localhost:8080/purchases\", purchase);\r\n      const serverResponse = response.data;\r\n      alert(\"Successful purchase! Your purchase id is: \" + serverResponse);\r\n      this.props.history.push('/customer');\r\n    } catch (err) {\r\n      alert(err.response.data.errorMessage);\r\n    }\r\n  }\r\n\r\n\r\n  public render() {\r\n    let id = this.props.match.params.id;\r\n    return (\r\n      <div className=\"coupon-details\">\r\n        <br />\r\n        Category: {this.state.coupon.category}<br /><br />\r\n        Name: {this.state.coupon.couponName} <br /><br />\r\n        Description: {this.state.coupon.description} <br /><br />\r\n        Price: {this.state.coupon.price} <br /><br />\r\n        {/* <h1>Amount: {this.state.coupon.amount}</h1> <br /> */}\r\n        Start date: {this.toDate(this.state.coupon.startDate)} <br /><br />\r\n        End date: {this.toDate(this.state.coupon.endDate)}<br /><br />\r\n\r\n        {!this.state.isAdminOrCompany\r\n          && <span>how many i want: <br /></span>}<br />\r\n        {!this.state.isAdminOrCompany\r\n          && <input type=\"number\" onChange={this.onPurchaseAmountChanged} />}\r\n        {!this.state.isAdminOrCompany\r\n          && <span className=\"purchase-button\">\r\n            <input type=\"button\" value=\"purchase\" onClick={this.purchase} />\r\n          </span>}\r\n        {this.state.isAdminOrCompany\r\n          && <aside >  <span className=\"delete-coupon\">\r\n            <input type=\"button\" value=\"delete\" onClick={this.delete} />\r\n          </span>\r\n            <NavLink to={\"/updateCoupon/\" + id}>\r\n              <span className=\"updateCoupon\">\r\n                <input type=\"button\" value=\"update coupon\" />\r\n              </span>\r\n            </NavLink>\r\n\r\n          </aside>}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","C:\\Development\\react\\coupons\\src\\components\\register\\Register.tsx",["188"],"import axios from \"axios\";\r\nimport { ChangeEvent } from \"react\";\r\nimport { Component } from \"react\";\r\nimport { SuccessfulLoginServerResponse } from \"../../models/SuccessfulLoginServerResponse\";\r\nimport { User } from \"../../models/User\";\r\nimport { UserType } from \"../../models/UserType\";\r\nimport \"./Register.css\";\r\n\r\ninterface RegisterState {\r\n    userName: string,\r\n    password: string,\r\n    firstName: string,\r\n    lastName: string\r\n\r\n}\r\nexport default class Register extends Component<any, RegisterState> {\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\"\r\n        };\r\n    }\r\n\r\n    private setUserName = (args: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const userName = args.target.value;\r\n        this.setState({ userName });\r\n    }\r\n\r\n    private setPassword = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const password = args.target.value;\r\n        this.setState({ password });\r\n    }\r\n    private setFirstName = (args: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const firstName = args.target.value;\r\n        this.setState({ firstName });\r\n    }\r\n\r\n    private setLastName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const lastName = args.target.value;\r\n        this.setState({ lastName });\r\n    }\r\n    private register = async () => {\r\n\r\n        try {\r\n            let user = new User(this.state.userName, this.state.password, this.state.firstName, this.state.lastName);\r\n            console.log(user);\r\n            user.userType = UserType.CUSTOMER;\r\n            const response = await axios.post<Number>(\"http://localhost:8080/users\", user);\r\n            const serverResponse = response.data;\r\n            alert(\"Successful registration! Your user id is: \" + serverResponse);\r\n            this.props.history.push('/home');\r\n        } catch (err) {\r\n            alert(err.response.data.errorMessage);\r\n            console.log(JSON.stringify(err));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"register\">\r\n                <br /> <br />\r\n                <span className=\"all-writing\">\r\n                    user name:<br /><br />\r\n            password:<br /><br />\r\n            first name:<br /><br />\r\n            last name:\r\n            </span>\r\n                <span className=\"inputs\">\r\n                    <input type=\"text\" name=\"userName\"\r\n                        onChange={this.setUserName} /><br /><br />\r\n                    <input type=\"password\" name=\"password\"\r\n                        onChange={this.setPassword} /><br /><br />\r\n                    <input type=\"text\" name=\"firstName\"\r\n                        onChange={this.setFirstName} /><br /><br />\r\n                    <input type=\"text\" name=\"lastName\"\r\n                        onChange={this.setLastName} />\r\n                </span>\r\n                <br /><br />\r\n\r\n                <input type=\"button\" value=\"register\" onClick={this.register} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","C:\\Development\\react\\coupons\\src\\models\\User.ts",["189"],"import { EnumType } from \"typescript\";\r\nimport { UserType } from \"./UserType\";\r\n\r\nexport class User{\r\n    public constructor(\r\n        public userName: string,\r\n        public password: string,\r\n        public firstName: string,\r\n        public lastName: string,\r\n        public userType?: UserType,\r\n        public id?:number,\r\n        public companyId?: number,\r\n    ){}\r\n}\r\n\r\n\r\n\r\n","C:\\Development\\react\\coupons\\src\\models\\UserType.ts",[],"C:\\Development\\react\\coupons\\src\\models\\Purchase.ts",[],"C:\\Development\\react\\coupons\\src\\redux\\action-type.ts",[],"C:\\Development\\react\\coupons\\src\\redux\\store.ts",[],"C:\\Development\\react\\coupons\\src\\redux\\reducer.ts",[],"C:\\Development\\react\\coupons\\src\\redux\\app-state.ts",["190","191"],"import { Coupon } from \"../models/Coupon\";\r\nimport { User } from \"../models/User\";\r\nimport { UserType } from \"../models/UserType\";\r\n\r\nexport class AppState {\r\n    public userType: UserType = null;\r\n    public isLoggedIn: boolean = null;\r\n  \r\n    // public users:User[]= null;\r\n}","C:\\Development\\react\\coupons\\src\\components\\addCoupon\\AddCoupon.tsx",[],"C:\\Development\\react\\coupons\\src\\models\\CategoryType.ts",[],"C:\\Development\\react\\coupons\\src\\components\\addCompany\\addCompany.tsx",[],"C:\\Development\\react\\coupons\\src\\components\\companies\\Companies.tsx",["192"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Company } from \"../../models/Company\";\r\nimport \"./Companies.css\"\r\n\r\n\r\ninterface CompaniesState {\r\n    companies: Company[];\r\n    companyNameFilter: String;\r\n\r\n}\r\nexport default class Companies extends Component<any, CompaniesState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = { companies: [], companyNameFilter: \"\" };\r\n    }\r\n\r\n    public onCompaniesPipeChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let text = event.target.value;\r\n        this.setState({ companyNameFilter: text });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const token = sessionStorage.getItem(\"token\");\r\n            axios.defaults.headers.common[\"Authorization\"] = token;\r\n            const response = await axios.get<Company[]>(\"http://localhost:8080/companies/forAdmin\");\r\n            this.setState({ companies: response.data });\r\n\r\n\r\n        } catch (error) {\r\n            alert(error.response.data.errorMessage);\r\n        }\r\n\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"Companies\">\r\n                <br /> <br />\r\n\r\n                Search by name :<input type=\"text\" onChange={this.onCompaniesPipeChanged} />\r\n\r\n                <br /> <br />\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Company Name</th>\r\n                            <th>Address</th>\r\n                            <th>Phone number</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.companies.filter(company => {\r\n                            if (this.state.companyNameFilter == \"\") {\r\n                                return true;\r\n                            }\r\n                            return company.companyName.toLowerCase().includes(this.state.companyNameFilter.toLowerCase());\r\n                        }).map((company) => (\r\n                            <tr>\r\n                                <td> {company.id} </td>\r\n                                <td><NavLink to={\"/companyDetails/\" + company.id}>\r\n                                    {company.companyName}\r\n                                </NavLink></td>\r\n                                <td> {company.address} </td>\r\n                                <td> {company.phoneNumber} </td>\r\n                            </tr>\r\n                        )\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <br /> <br />  <NavLink to={\"/addCompany\"} className=\"add-button\">\r\n                    <input type=\"button\" value=\"add company\" />\r\n                </NavLink>\r\n\r\n            </div >\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n","C:\\Development\\react\\coupons\\src\\components\\companyDetails\\CompanyDetails.tsx",[],"C:\\Development\\react\\coupons\\src\\models\\Company.ts",[],"C:\\Development\\react\\coupons\\src\\components\\purchaseDetails\\PurchaseDetails.tsx",["193","194"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Purchase } from \"../../models/Purchase\";\r\nimport \"./PurchaseDetails.css\";\r\n\r\ninterface PurchaseDetailsState {\r\n    purchase: Purchase;\r\n    isAdminOrCompany: boolean;\r\n}\r\nexport default class PurchaseDetails extends Component<any, PurchaseDetailsState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            purchase: new Purchase(null, null, null, null, null, null), isAdminOrCompany: false\r\n        };\r\n\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        try {\r\n            const token = sessionStorage.getItem(\"token\");\r\n            axios.defaults.headers.common[\"Authorization\"] = token;\r\n            const id = this.props.match.params.id;\r\n            const response = await axios.get<Purchase>(\"http://localhost:8080/purchases/\" + id);\r\n            this.setState({ purchase: response.data });\r\n            const userType = sessionStorage.getItem(\"userType\");\r\n            if (userType == \"ADMIN\" || userType == \"COMPANY\") {\r\n                this.setState({ isAdminOrCompany: true });\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    private delete = async () => {\r\n\r\n        try {\r\n            const id = this.props.match.params.id;\r\n            const response = await axios.delete(\"http://localhost:8080/purchases/\" + id);\r\n            this.setState({ purchase: response.data });\r\n            alert(\"purchase was successfuly deleted\");\r\n            this.props.history.push('/purchases')\r\n\r\n        } catch (err) {\r\n            alert(err.response.data.errorMessage);\r\n        }\r\n    }\r\n    private toDate(strDate: string): string {\r\n        let date = new Date(strDate);\r\n        return date.toDateString();\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"purchase-details\">\r\n                <br /> <br /> <br />\r\n\r\n                id: {this.state.purchase.id} <br /><br />\r\n                coupon id: {this.state.purchase.couponId} <br /><br />\r\n                coupon name: {this.state.purchase.couponName}<br /><br />\r\n                amount: {this.state.purchase.amount} <br /><br />\r\n                {this.state.isAdminOrCompany && <div>\r\n                    user id: {this.state.purchase.userId}  </div>} <br />\r\n                timastamp: {this.toDate(this.state.purchase.timestamp)} <br /> <br />\r\n                {this.state.isAdminOrCompany\r\n                    && <input type=\"button\" value=\"delete\" onClick={this.delete} />}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Development\\react\\coupons\\src\\components\\users\\User.tsx",["195"],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { User } from \"../../models/User\";\r\nimport \"./User.css\"\r\n\r\n\r\n\r\ninterface UsersState {\r\n    users: User[];\r\n    userNameFilter: String;\r\n\r\n}\r\nexport default class Users extends Component<any, UsersState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = { users: [], userNameFilter: \"\" };\r\n    }\r\n\r\n    private async delete(id: number) {\r\n\r\n        try {\r\n            await axios.delete(\"http://localhost:8080/users/\" + id);\r\n            this.componentDidMount();\r\n            alert(\"User was successfuly deleted\");\r\n            this.props.history.push('/users');\r\n        } catch (err) {\r\n            alert(err.response.data.errorMessage);\r\n        }\r\n    }\r\n\r\n\r\n    public onUsersPipeChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let text = event.target.value;\r\n        this.setState({ userNameFilter: text });\r\n    }\r\n\r\n\r\n    public async componentDidMount() {\r\n        try {\r\n            const token = sessionStorage.getItem(\"token\");\r\n            axios.defaults.headers.common[\"Authorization\"] = token;\r\n\r\n            const response = await axios.get<User[]>(\"http://localhost:8080/users\");\r\n            this.setState({ users: response.data });\r\n\r\n        } catch (error) {\r\n            alert(error.response.data.errorMessage);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"Users\">\r\n\r\n                <br /> <br />\r\n                Search by user name:<input type=\"text\" onChange={this.onUsersPipeChanged} />\r\n                <br /> <br />\r\n\r\n                <table >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>User name</th>\r\n                            <th>First name</th>\r\n                            <th>Last name </th>\r\n                            <th>Company id </th>\r\n                            <th>Delete user </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.users.filter(user => {\r\n                            if (this.state.userNameFilter == \"\") {\r\n                                return true;\r\n                            }\r\n                            return user.userName.toLowerCase().includes(this.state.userNameFilter.toLowerCase());\r\n                        }).map((user) => (\r\n                            <tr>\r\n                                <td> {user.id} </td>\r\n                                <td> {user.userName} </td>\r\n                                <td> {user.firstName} </td>\r\n                                <td> {user.lastName} </td>\r\n                                <td> {user.companyId} </td>\r\n                                <td> <input type=\"button\" value=\"delete\" onClick={() => this.delete(user.id)} /></td>\r\n                            </tr>\r\n\r\n                        )\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div >\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","C:\\Development\\react\\coupons\\src\\components\\userDetails\\UserDetails.tsx",["196"],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { User } from \"../../models/User\";\r\nimport \"./UserDetails.css\";\r\n\r\n\r\ninterface UserDetailsState {\r\n  user: User;\r\n  isCompany: boolean;\r\n}\r\nexport default class UserDetails extends Component<any, UserDetailsState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: new User(null, null, null, null, null, null),\r\n      isCompany: false\r\n    };\r\n\r\n  }\r\n\r\n\r\n  public async componentDidMount() {\r\n    try {\r\n      const token = sessionStorage.getItem(\"token\");\r\n      axios.defaults.headers.common[\"Authorization\"] = token;\r\n      const id = this.props.match.params.id;\r\n      const response = await axios.get<User>(\"http://localhost:8080/users/\" + id);\r\n      this.setState({ user: response.data });\r\n      const userType = sessionStorage.getItem(\"userType\");\r\n      if (userType == \"COMPANY\") {\r\n        this.setState({ isCompany: true });\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  private delete = async () => {\r\n\r\n    try {\r\n      const id = this.props.match.params.id;\r\n      const response = await axios.delete(\"http://localhost:8080/users/\" + id);\r\n      this.setState({ user: response.data });\r\n      alert(\"User was successfuly deleted\");\r\n      this.props.history.push('/users');\r\n\r\n\r\n    } catch (err) {\r\n      alert(err.response.data.errorMessage);\r\n    }\r\n  }\r\n\r\n\r\n  public render() {\r\n    let id = this.props.match.params.id;\r\n    return (\r\n      <div className=\"user-details\">\r\n        <br /><br />\r\n          user name: {this.state.user.userName} <br /><br />\r\n          user id: {this.state.user.id}<br /><br />\r\n          first name: {this.state.user.firstName} <br /><br />\r\n          last name: {this.state.user.lastName} <br /><br />\r\n        {this.state.isCompany\r\n          && <span className=\"company-id\"> companyId: {this.state.user.companyId}</span>}\r\n        <br /> <br />\r\n        <span className=\"buttons\">\r\n          <input type=\"button\" value=\"delete\" onClick={this.delete} />\r\n        </span>\r\n        <NavLink to={\"/updateUser/\" + id} className=\"buttons\">\r\n          <input type=\"button\" value=\"update user\" />\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\Development\\react\\coupons\\src\\components\\updateCompany\\UpdateCompany.tsx",["197"],"import axios from \"axios\";\r\nimport { ChangeEvent, Component } from \"react\";\r\nimport { Company } from \"../../models/Company\";\r\nimport \"./UpdateCompany.css\";\r\n\r\n\r\ninterface UpdateCompanyState {\r\n    address: string;\r\n    phoneNumber: string;\r\n}\r\nexport default class UpdateCompany extends Component<any, UpdateCompanyState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            address: \"\",\r\n            phoneNumber: \"\"\r\n        };\r\n    }\r\n\r\n    private setAddress = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const address = args.target.value;\r\n        this.setState({ address });\r\n    }\r\n    private setPhoneNumber = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const phoneNumber = args.target.value;\r\n        this.setState({ phoneNumber });\r\n    }\r\n    private updateCompany = async () => {\r\n\r\n        try {\r\n            const id = this.props.match.params.id;\r\n            const company1 = await axios.get<Company>(\"http://localhost:8080/companies/\" + id);\r\n            const companyName = company1.data.companyName;\r\n            let company = new Company(id, companyName, this.state.address, this.state.phoneNumber);\r\n            console.log(company);\r\n            const response = await axios.put(\"http://localhost:8080/companies\", company);\r\n            alert(\"Successful update company! \");\r\n            this.props.history.push('/companies');\r\n        } catch (err) {\r\n            alert(err.response.data.errorMessage);\r\n            console.log(JSON.stringify(err));\r\n        }\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"update-company\">\r\n                <br /><br />\r\n                <span className=\"all-writing\">\r\n                    address: <br /> <br />\r\n                    phone-number:\r\n                    </span>\r\n                <span className=\"inputs\">\r\n                    <input type=\"text\" name=\"address\"\r\n                        onChange={this.setAddress} /><br /><br />\r\n                    <input type=\"text\" name=\"phoneNumber\"\r\n                        onChange={this.setPhoneNumber} />\r\n                </span>\r\n                <br /><br /><br />\r\n\r\n                <input type=\"button\" value=\"update company\" onClick={this.updateCompany} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Development\\react\\coupons\\src\\components\\updateUser\\UpdateUser.tsx",["198","199","200"],"import axios from \"axios\";\r\nimport { ChangeEvent } from \"react\";\r\nimport { Component } from \"react\";\r\nimport { User } from \"../../models/User\";\r\nimport \"./UpdateUser.css\";\r\n\r\ninterface UpdateUserState {\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n}\r\nexport default class UpdateUser extends Component<any, UpdateUserState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\"\r\n        };\r\n    }\r\n\r\n    private setPassword = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const password = args.target.value;\r\n        this.setState({ password });\r\n    }\r\n    private setFirstName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const firstName = args.target.value;\r\n        this.setState({ firstName });\r\n    }\r\n    private setLastName = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const lastName = args.target.value;\r\n        this.setState({ lastName });\r\n    }\r\n\r\n\r\n\r\n    private updateUser = async () => {\r\n\r\n        try {\r\n            const id = this.props.match.params.id;\r\n            const user = await axios.get<User>(\"http://localhost:8080/users/\" + id);\r\n            let userName = user.data.userName;\r\n            let userType = user.data.userType;\r\n            let companyId = user.data.companyId;\r\n            let user1 = new User(userName, this.state.password, this.state.firstName, this.state.lastName, userType, id, companyId);\r\n            console.log(user1);\r\n            const response = await axios.put(\"http://localhost:8080/users\", user1);\r\n            alert(\"Successful update user! \");\r\n            if (sessionStorage.getItem(\"userType\") == \"Admin\") {\r\n                this.props.history.push('/users');\r\n\r\n            } else if (sessionStorage.getItem(\"userType\") == \"Company\") {\r\n                this.props.history.push('/Company');\r\n            } else {\r\n                this.props.history.push('/Customer');\r\n            }\r\n        } catch (err) {\r\n            alert(err.response.data.errorMessage);\r\n        }\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"update-user\">\r\n                <br /><br />\r\n                <span className=\"all-writing\">\r\n                    password: <br /> <br />\r\n                    first name: <br /> <br />\r\n                    last name:\r\n                    </span>\r\n                <span className=\"inputs\">\r\n                    <input type=\"password\" name=\"password\"\r\n                        onChange={this.setPassword} /><br /><br />\r\n                    <input type=\"text\" name=\"firstName\"\r\n                        onChange={this.setFirstName} /><br /><br />\r\n                    <input type=\"text\" name=\"lastName\"\r\n                        onChange={this.setLastName} />\r\n                </span>\r\n                <br /><br />\r\n\r\n                <input type=\"button\" value=\"update user\" onClick={this.updateUser} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Development\\react\\coupons\\src\\components\\updateCoupon\\UpdateCoupon.tsx",["201","202","203","204","205"],"import axios from \"axios\";\r\nimport { ChangeEvent } from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Coupon } from \"../../models/Coupon\";\r\nimport \"./UpdateCoupon.css\";\r\n\r\n\r\ninterface UpdateCouponState {\r\n    description: string;\r\n    amount: number;\r\n    price: number\r\n}\r\nexport default class UpdateCoupon extends Component<any, UpdateCouponState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            description: \"\",\r\n            amount: null,\r\n            price: null\r\n\r\n        };\r\n    }\r\n\r\n    private setDescription = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const description = args.target.value;\r\n        this.setState({ description });\r\n    }\r\n    private setAmount = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const amount = + args.target.value;\r\n        this.setState({ amount });\r\n    }\r\n    private setPrice = (args: ChangeEvent<HTMLInputElement>) => {\r\n        const price = + args.target.value;\r\n        this.setState({ price });\r\n    }\r\n\r\n\r\n\r\n\r\n    private updateCoupon = async () => {\r\n\r\n        try {\r\n            const id = this.props.match.params.id;\r\n            const coupon1 = await axios.get<Coupon>(\"http://localhost:8080/coupons/\" + id);\r\n            const couponName = coupon1.data.couponName;\r\n            const startDate = coupon1.data.startDate;\r\n            const endDate = coupon1.data.endDate;\r\n            const category = coupon1.data.category;\r\n            const companyName = coupon1.data.companyName;\r\n            const companyid = coupon1.data.companyId;\r\n            let coupon = new Coupon(id, couponName, this.state.description, startDate, endDate, category,\r\n                this.state.amount, this.state.price, companyName, companyid);\r\n            console.log(coupon);\r\n            const response = await axios.put(\"http://localhost:8080/coupons\", coupon);\r\n            alert(\"Successful update coupon! \");\r\n            {\r\n                sessionStorage.getItem(\"userType\") == \"ADMIN\" &&\r\n                this.props.history.push('/Admin');\r\n            }\r\n            {\r\n                sessionStorage.getItem(\"userType\") == \"COMPANY\" &&\r\n                this.props.history.push('/Company');\r\n            }\r\n        } catch (err) {\r\n            alert(err.response.data.errorMessage);\r\n            console.log(JSON.stringify(err));\r\n        }\r\n    }\r\n\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"update-coupon\">\r\n                <br />\r\n                <span className=\"all-writing\">\r\n                    description: <br /><br />\r\n                amount:<br /><br />\r\n                price:\r\n                </span>\r\n                <span className=\"inputs\">\r\n                    <input type=\"text\" name=\"description\" onChange={this.setDescription} /><br /><br />\r\n                    <input type=\"number\" name=\"amount\" onChange={this.setAmount} /><br /><br />\r\n                    <input type=\"number\" name=\"price\" onChange={this.setPrice} />\r\n                </span>\r\n                <br /><br />\r\n\r\n                <input type=\"button\" value=\"update coupon\" onClick={this.updateCoupon} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Development\\react\\coupons\\src\\components\\purchases\\Purchases.tsx",["206"],"import axios from \"axios\";\r\nimport { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from \"constants\";\r\nimport React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Purchase } from \"../../models/Purchase\";\r\nimport \"./Purchases.css\";\r\n\r\ninterface PurchasesState {\r\n    purchases: Purchase[];\r\n\r\n}\r\nexport default class Purchases extends Component<any, PurchasesState>{\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n        this.state = { purchases: [] };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const token = sessionStorage.getItem(\"token\");\r\n            axios.defaults.headers.common[\"Authorization\"] = token;\r\n\r\n            let response;\r\n            if (sessionStorage.userType === \"ADMIN\") {\r\n                response = await axios.get<Purchase[]>(\"http://localhost:8080/purchases\");\r\n            }\r\n            else if (sessionStorage.userType === \"COMPANY\") {\r\n                response = await axios.get<Purchase[]>(\"http://localhost:8080/purchases/byCompanyIdForCompany\");\r\n            }\r\n            else {\r\n                response = await axios.get<Purchase[]>(\"http://localhost:8080/purchases/byUserIdForCustomer\");\r\n            }\r\n\r\n            this.setState({ purchases: response.data });\r\n\r\n\r\n        } catch (error) {\r\n            console.log(\"THE ERROR \" + error);\r\n            alert(error.response.data.errorMessage);\r\n        }\r\n\r\n    }\r\n\r\n    private toDate(strDate: string): string {\r\n        let date = new Date(strDate);\r\n        return date.toDateString();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"Purchases\">\r\n                <br />  <br />\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>User id</th>\r\n                            <th>Coupon id</th>\r\n                            <th>Coupon name</th>\r\n                            <th>Amount</th>\r\n                            <th>Timestamp</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.purchases.map(purchase => (\r\n                            <tr>\r\n                                <td><NavLink to={\"/purchaseDetails/\" + purchase.id}>\r\n                                    {purchase.id}\r\n                                </NavLink></td>\r\n                                <td> {purchase.userId} </td>\r\n                                <td> {purchase.couponId} </td>\r\n                                <td> {purchase.couponName} </td>\r\n                                <td> {purchase.amount} </td>\r\n                                <td> {this.toDate(purchase.timestamp)} </td>\r\n                            </tr>\r\n                        )\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div >\r\n\r\n        )\r\n    }\r\n\r\n}",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":57,"column":32,"nodeType":"213","messageId":"214","endLine":57,"endColumn":34},{"ruleId":"215","severity":1,"message":"216","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":21},{"ruleId":"211","severity":1,"message":"212","line":52,"column":39,"nodeType":"213","messageId":"214","endLine":52,"endColumn":41},{"ruleId":"211","severity":1,"message":"212","line":52,"column":76,"nodeType":"213","messageId":"214","endLine":52,"endColumn":78},{"ruleId":"211","severity":1,"message":"212","line":59,"column":39,"nodeType":"213","messageId":"214","endLine":59,"endColumn":41},{"ruleId":"211","severity":1,"message":"212","line":59,"column":76,"nodeType":"213","messageId":"214","endLine":59,"endColumn":78},{"ruleId":"211","severity":1,"message":"212","line":61,"column":39,"nodeType":"213","messageId":"214","endLine":61,"endColumn":41},{"ruleId":"211","severity":1,"message":"212","line":61,"column":76,"nodeType":"213","messageId":"214","endLine":61,"endColumn":78},{"ruleId":"211","severity":1,"message":"212","line":63,"column":38,"nodeType":"213","messageId":"214","endLine":63,"endColumn":40},{"ruleId":"211","severity":1,"message":"212","line":72,"column":57,"nodeType":"213","messageId":"214","endLine":72,"endColumn":59},{"ruleId":"211","severity":1,"message":"212","line":78,"column":59,"nodeType":"213","messageId":"214","endLine":78,"endColumn":61},{"ruleId":"211","severity":1,"message":"212","line":85,"column":59,"nodeType":"213","messageId":"214","endLine":85,"endColumn":61},{"ruleId":"215","severity":1,"message":"219","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":70,"column":57,"nodeType":"213","messageId":"214","endLine":70,"endColumn":59},{"ruleId":"211","severity":1,"message":"212","line":76,"column":59,"nodeType":"213","messageId":"214","endLine":76,"endColumn":61},{"ruleId":"211","severity":1,"message":"212","line":83,"column":59,"nodeType":"213","messageId":"214","endLine":83,"endColumn":61},{"ruleId":"211","severity":1,"message":"212","line":70,"column":57,"nodeType":"213","messageId":"214","endLine":70,"endColumn":59},{"ruleId":"211","severity":1,"message":"212","line":76,"column":59,"nodeType":"213","messageId":"214","endLine":76,"endColumn":61},{"ruleId":"211","severity":1,"message":"212","line":83,"column":59,"nodeType":"213","messageId":"214","endLine":83,"endColumn":61},{"ruleId":"215","severity":1,"message":"220","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":21},{"ruleId":"215","severity":1,"message":"221","line":8,"column":10,"nodeType":"217","messageId":"218","endLine":8,"endColumn":39},{"ruleId":"215","severity":1,"message":"222","line":9,"column":10,"nodeType":"217","messageId":"218","endLine":9,"endColumn":14},{"ruleId":"215","severity":1,"message":"223","line":10,"column":10,"nodeType":"217","messageId":"218","endLine":10,"endColumn":18},{"ruleId":"215","severity":1,"message":"224","line":11,"column":8,"nodeType":"217","messageId":"218","endLine":11,"endColumn":12},{"ruleId":"211","severity":1,"message":"212","line":41,"column":20,"nodeType":"213","messageId":"214","endLine":41,"endColumn":22},{"ruleId":"211","severity":1,"message":"212","line":41,"column":43,"nodeType":"213","messageId":"214","endLine":41,"endColumn":45},{"ruleId":"215","severity":1,"message":"221","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":39},{"ruleId":"215","severity":1,"message":"225","line":1,"column":10,"nodeType":"217","messageId":"218","endLine":1,"endColumn":18},{"ruleId":"215","severity":1,"message":"226","line":1,"column":10,"nodeType":"217","messageId":"218","endLine":1,"endColumn":16},{"ruleId":"215","severity":1,"message":"222","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":58,"column":62,"nodeType":"213","messageId":"214","endLine":58,"endColumn":64},{"ruleId":"211","severity":1,"message":"212","line":28,"column":26,"nodeType":"213","messageId":"214","endLine":28,"endColumn":28},{"ruleId":"211","severity":1,"message":"212","line":28,"column":49,"nodeType":"213","messageId":"214","endLine":28,"endColumn":51},{"ruleId":"211","severity":1,"message":"212","line":76,"column":59,"nodeType":"213","messageId":"214","endLine":76,"endColumn":61},{"ruleId":"211","severity":1,"message":"212","line":33,"column":20,"nodeType":"213","messageId":"214","endLine":33,"endColumn":22},{"ruleId":"215","severity":1,"message":"227","line":37,"column":19,"nodeType":"217","messageId":"218","endLine":37,"endColumn":27},{"ruleId":"215","severity":1,"message":"227","line":48,"column":19,"nodeType":"217","messageId":"218","endLine":48,"endColumn":27},{"ruleId":"211","severity":1,"message":"212","line":50,"column":52,"nodeType":"213","messageId":"214","endLine":50,"endColumn":54},{"ruleId":"211","severity":1,"message":"212","line":53,"column":59,"nodeType":"213","messageId":"214","endLine":53,"endColumn":61},{"ruleId":"215","severity":1,"message":"227","line":55,"column":19,"nodeType":"217","messageId":"218","endLine":55,"endColumn":27},{"ruleId":"228","severity":1,"message":"229","line":57,"column":13,"nodeType":"230","messageId":"231","endLine":60,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":58,"column":52,"nodeType":"213","messageId":"214","endLine":58,"endColumn":54},{"ruleId":"228","severity":1,"message":"229","line":61,"column":13,"nodeType":"230","messageId":"231","endLine":64,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":62,"column":52,"nodeType":"213","messageId":"214","endLine":62,"endColumn":54},{"ruleId":"215","severity":1,"message":"232","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":41},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Unsubscribe' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'ChangeEvent' is defined but never used.","'SuccessfulLoginServerResponse' is defined but never used.","'User' is defined but never used.","'UserType' is defined but never used.","'Card' is defined but never used.","'EnumType' is defined but never used.","'Coupon' is defined but never used.","'response' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'SSL_OP_SSLEAY_080_CLIENT_DH_BUG' is defined but never used.","no-global-assign","no-unsafe-negation"]